name: Create Release and Push Image

on:
  release:
    types: [published]

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      # Checkout repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build and push Docker image
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile
          push: true
          tags: noctuidus/devcontainer-latex:${{ github.event.release.tag_name }}

      # Debug: List repository contents
      - name: List repository contents
        run: |
          ls -R
        shell: bash

      # Create minimal release zip
      - name: Create minimal release zip
        run: |
          mkdir -p latex-devcontainer-minimal
          cp -r example/.devcontainer latex-devcontainer-minimal/
          # Update devcontainer.json to use prebuilt image
          sed -i 's|"build": {[^}]*}|"image": "noctuidus/devcontainer-latex:${{ github.event.release.tag_name }}"|' latex-devcontainer-minimal/.devcontainer/devcontainer.json
          # Debug: Verify devcontainer.json
          cat latex-devcontainer-minimal/.devcontainer/devcontainer.json
          zip -r latex-devcontainer-minimal.zip latex-devcontainer-minimal
        shell: bash

      # Create full release zip
      - name: Create full release zip
        run: |
          mkdir -p latex-devcontainer-release/.devcontainer
          cp -r example/.devcontainer/* latex-devcontainer-release/.devcontainer/
          cp Dockerfile latex-devcontainer-release/.devcontainer/
          cp -r config latex-devcontainer-release/.devcontainer/
          # Update devcontainer.json to use local Dockerfile
          sed -i 's|"build": {[^}]*}|"build": {"dockerfile": "Dockerfile", "context": "."}|' latex-devcontainer-release/.devcontainer/devcontainer.json
          # Comment out image field in docker-compose.yml
          sed -i 's|^\(\s*image:.*\)$|#\1|' latex-devcontainer-release/.devcontainer/docker-compose.yml
          # Debug: Verify modified files
          cat latex-devcontainer-release/.devcontainer/devcontainer.json
          cat latex-devcontainer-release/.devcontainer/docker-compose.yml
          zip -r latex-devcontainer-release.zip latex-devcontainer-release
        shell: bash

      # Upload minimal release zip
      - name: Upload minimal release zip
        run: |
          gh release upload ${{ github.event.release.tag_name }} latex-devcontainer-minimal.zip --clobber
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: bash

      # Upload full release zip
      - name: Upload full release zip
        run: |
          gh release upload ${{ github.event.release.tag_name }} latex-devcontainer-release.zip --clobber
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: bash