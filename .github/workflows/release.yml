name: Create Release and Push Image

on:
  release:
    types: [published]

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      # Checkout repository
      - name: Checkout code
        uses: actions/checkout@v4

      # # Set up Docker Buildx
      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v3

      # # Log in to Docker Hub
      # - name: Log in to Docker Hub
      #   uses: docker/login-action@v3
      #   with:
      #     username: ${{ secrets.DOCKER_USERNAME }}
      #     password: ${{ secrets.DOCKER_PASSWORD }}

      # # Build and push Docker image
      # - name: Build and push Docker image
      #   uses: docker/build-push-action@v6
      #   with:
      #     context: .
      #     file: Dockerfile
      #     push: true
      #     tags: noctuidus/devcontainer-latex:${{ github.event.release.tag_name }}

      # Debug: List repository contents
      - name: List repository contents
        run: |
          ls -R
        shell: bash

      # Create core release zip
      - name: Create core release zip
        run: |
          basepath=latex-devcontainer-core-${{ github.event.release.tag_name }}
          mkdir -p ${basepath}/{.devcontainer,.vscode,.config}
          cp -r src/.devcontainer/{docker-compose.yml,devcontainer.json} ${basepath}/.devcontainer/
          cp src/.gitattributes ${basepath}/
          cp src/.gitignore ${basepath}/

          cp -r src/.vscode ${basepath}/
          cp -r src/config/{chktex-config.rc,latexindent-config.yaml,ohmyposh-theme.json} ${basepath}/.config/

          # Generate README.md from template
          cp src/.devcontainer/README.tpl.md ${basepath}/.devcontainer/README.md
          echo "# LaTeX Devcontainer (${{ github.event.release.tag_name }})" > ${basepath}/Preamble.md
          echo "" >> ${basepath}/Preamble.md
          echo "This is the core LaTeX devcontainer release, using a prebuilt Docker image." >> ${basepath}/Preamble.md
          awk 'NR==FNR {p=p $0 "\n"; next} {sub(/{{ Preamble }}/, p)}1' ${basepath}/Preamble.md ${basepath}/.devcontainer/README.md > temp && mv temp ${basepath}/.devcontainer/README.md
          awk '/<!-- BEGIN USAGE -->/{p=1}/<!-- END USAGE -->/{p=0}p' README.md > ${basepath}/Usage.md
          awk 'NR==FNR {p=p $0 "\n"; next} {sub(/{{ USAGE }}/, p)}1' ${basepath}/Usage.md ${basepath}/.devcontainer/README.md > temp && mv temp ${basepath}/.devcontainer/README.md
          awk '/<!-- BEGIN CONFIG -->/{p=1}/<!-- END CONFIG -->/{p=0}p' README.md > ${basepath}/Config.md
          awk 'NR==FNR {p=p $0 "\n"; next} {sub(/{{ CONFIG }}/, p)}1' ${basepath}/Config.md ${basepath}/.devcontainer/README.md > temp && mv temp ${basepath}/.devcontainer/README.md
          awk '/<!-- BEGIN DEBUG -->/{p=1}/<!-- END DEBUG -->/{p=0}p' README.md > ${basepath}/Debug.md
          awk 'NR==FNR {p=p $0 "\n"; next} {sub(/{{ DEBUG }}/, p)}1' ${basepath}/Debug.md ${basepath}/.devcontainer/README.md > temp && mv temp ${basepath}/.devcontainer/README.md
          # Add release tag comments
          for file in ${basepath}/.devcontainer/*.json; do
            echo "// Release: ${{ github.event.release.tag_name }}" | cat - "$file" > temp && mv temp "$file"
          done
          for file in ${basepath}/.devcontainer/*.{yml,yaml}; do
            echo "# Release: ${{ github.event.release.tag_name }}" | cat - "$file" > temp && mv temp "$file"
          done
          # Replace {{TAG}} in Markdown and docker-compose.yml
          find ${basepath} -type f -name "*.md" -exec sed -i "s/{{TAG}}/${{ github.event.release.tag_name }}/g" {} \;
          sed -i "s|image: noctuidus/devcontainer-latex:{{TAG}}|image: noctuidus/devcontainer-latex:${{ github.event.release.tag_name }}|" ${basepath}/.devcontainer/docker-compose.yml

          # Create top-level README.md
          echo "# LaTeX Devcontainer (${{ github.event.release.tag_name }})" > ${basepath}/README-devcontainer.md
          echo "" >> ${basepath}/README-devcontainer.md
          echo "This is the core LaTeX devcontainer release, using a prebuilt Docker image." >> ${basepath}/README-devcontainer.md
          echo "" >> ${basepath}/README-devcontainer.md
          cat ${basepath}/Usage.md >> ${basepath}/README-devcontainer.md
          cat ${basepath}/Config.md >> ${basepath}/README-devcontainer.md
          rm ${basepath}/Preamble.md ${basepath}/Usage.md ${basepath}/Config.md ${basepath}/Debug.md
          zip -r latex-devcontainer-core.zip ${basepath}
        shell: bash

      # Create source release zip
      - name: Create source release zip
        run: |
          basepath=latex-devcontainer-source-${{ github.event.release.tag_name }}
          mkdir -p ${basepath}/{.devcontainer,.vscode,.config}
          cp -r src/.devcontainer/{docker-compose.yml,devcontainer.json} ${basepath}/.devcontainer/
          cp src/.gitattributes ${basepath}/
          cp src/.gitignore ${basepath}/
          cp -r src/.vscode ${basepath}/
          cp -r src/config/{chktex-config.rc,chktex-config-default.rc,latexindent-config.yaml,ohmyposh-theme.json,texlive-profile.tlp} ${basepath}/.config/
          cp src/Dockerfile ${basepath}/.devcontainer/

          # Generate README.md from template
          cp src/.devcontainer/README.tpl.md ${basepath}/.devcontainer/README.md
          echo "# LaTeX Devcontainer (${{ github.event.release.tag_name }})" > ${basepath}/Preamble.md
          echo "" >> ${basepath}/Preamble.md
          echo "This is the source LaTeX devcontainer release, for local building without demo files." >> ${basepath}/Preamble.md
          awk 'NR==FNR {p=p $0 "\n"; next} {sub(/{{ Preamble }}/, p)}1' ${basepath}/Preamble.md ${basepath}/.devcontainer/README.md > temp && mv temp ${basepath}/.devcontainer/README.md
          awk '/<!-- BEGIN USAGE -->/{p=1}/<!-- END USAGE -->/{p=0}p' README.md > ${basepath}/Usage.md
          awk 'NR==FNR {p=p $0 "\n"; next} {sub(/{{ USAGE }}/, p)}1' ${basepath}/Usage.md ${basepath}/.devcontainer/README.md > temp && mv temp ${basepath}/.devcontainer/README.md
          awk '/<!-- BEGIN CONFIG -->/{p=1}/<!-- END CONFIG -->/{p=0}p' README.md > ${basepath}/Config.md
          awk 'NR==FNR {p=p $0 "\n"; next} {sub(/{{ CONFIG }}/, p)}1' ${basepath}/Config.md ${basepath}/.devcontainer/README.md > temp && mv temp ${basepath}/.devcontainer/README.md
          awk '/<!-- BEGIN DEBUG -->/{p=1}/<!-- END DEBUG -->/{p=0}p' README.md > ${basepath}/Debug.md
          awk 'NR==FNR {p=p $0 "\n"; next} {sub(/{{ DEBUG }}/, p)}1' ${basepath}/Debug.md ${basepath}/.devcontainer/README.md > temp && mv temp ${basepath}/.devcontainer/README.md
          # Add release tag comments
          for file in ${basepath}/.devcontainer/*.json ${basepath}/.config/*.json; do
            echo "// Release: ${{ github.event.release.tag_name }}" | cat - "$file" > temp && mv temp "$file"
          done
          for file in ${basepath}/.devcontainer/*.{yml,yaml} ${basepath}/.config/*.{yml,yaml}; do
            echo "# Release: ${{ github.event.release.tag_name }}" | cat - "$file" > temp && mv temp "$file"
          done
          for file in ${basepath}/.config/*.{rc,tlp}; do
            echo "# Release: ${{ github.event.release.tag_name }}" | cat - "$file" > temp && mv temp "$file"
          done
          # Replace {{TAG}} in Markdown and docker-compose.yml
          find ${basepath} -type f -name "*.md" -exec sed -i "s/{{TAG}}/${{ github.event.release.tag_name }}/g" {} \;
          sed -i "s|image: noctuidus/devcontainer-latex:{{TAG}}|image: noctuidus/devcontainer-latex:${{ github.event.release.tag_name }}|" ${basepath}/.devcontainer/docker-compose.yml
          sed -i 's|^#\(build:\s*\n\s*context:[^\n]*\n\s*dockerfile:[^\n]*\)|build:\n    context: .\n    dockerfile: Dockerfile|' ${basepath}/.devcontainer/docker-compose.yml
          sed -i 's|^\(\s*image:.*\)$|#\1|' ${basepath}/.devcontainer/docker-compose.yml
          sed -i '/volumes:/a \      - ./texmf:/usr/local/texlive/texmf-local' ${basepath}/.devcontainer/docker-compose.yml
          # Create top-level README.md
          echo "# LaTeX Devcontainer (${{ github.event.release.tag_name }})" > ${basepath}/README-devcontainer.md
          echo "" >> ${basepath}/README-devcontainer.md
          echo "This is the source LaTeX devcontainer release, for local building without demo files." >> ${basepath}/README-devcontainer.md
          echo "" >> ${basepath}/README-devcontainer.md
          cat ${basepath}/Usage.md >> ${basepath}/README-devcontainer.md
          cat ${basepath}/Config.md >> ${basepath}/README-devcontainer.md
          rm ${basepath}/Preamble.md ${basepath}/Usage.md ${basepath}/Config.md ${basepath}/Debug.md
          zip -r latex-devcontainer-source.zip ${basepath}
        shell: bash

      # Create example release zip
      - name: Create example release zip
        run: |
          basepath=latex-devcontainer-example-${{ github.event.release.tag_name }}
          mkdir -p ${basepath}/{.devcontainer,.vscode,.config}
          cp -r src/.devcontainer/{docker-compose.yml,devcontainer.json} ${basepath}/.devcontainer/
          cp src/.gitattributes ${basepath}/
          cp src/.gitignore ${basepath}/
          cp -r src/.vscode ${basepath}/
          cp -r src/config/{chktex-config.rc,latexindent-config.yaml,ohmyposh-theme.json} ${basepath}/.config/
          cp -r example/{example.tex,latexmkrc} ${basepath}/



          # Generate .devcontainer/README.md from template
          cp src/.devcontainer/README.tpl.md ${basepath}/.devcontainer/README.md
          awk 'NR==FNR {p=p $0 "\n"; next} {sub(/{{ Preamble }}/, p)}1' ${basepath}/Preamble.md ${basepath}/.devcontainer/README.md > temp && mv temp ${basepath}/.devcontainer/README.md
          awk '/<!-- BEGIN USAGE -->/{p=1}/<!-- END USAGE -->/{p=0}p' README.md > ${basepath}/Usage.md
          awk 'NR==FNR {p=p $0 "\n"; next} {sub(/{{ USAGE }}/, p)}1' ${basepath}/Usage.md ${basepath}/.devcontainer/README.md > temp && mv temp ${basepath}/.devcontainer/README.md
          awk '/<!-- BEGIN CONFIG -->/{p=1}/<!-- END CONFIG -->/{p=0}p' README.md > ${basepath}/Config.md
          awk 'NR==FNR {p=p $0 "\n"; next} {sub(/{{ CONFIG }}/, p)}1' ${basepath}/Config.md ${basepath}/.devcontainer/README.md > temp && mv temp ${basepath}/.devcontainer/README.md
          awk '/<!-- BEGIN DEBUG -->/{p=1}/<!-- END DEBUG -->/{p=0}p' README.md > ${basepath}/Debug.md
          awk 'NR==FNR {p=p $0 "\n"; next} {sub(/{{ DEBUG }}/, p)}1' ${basepath}/Debug.md ${basepath}/.devcontainer/README.md > temp && mv temp ${basepath}/.devcontainer/README.md

          # Add release tag comments
          for file in ${basepath}/.devcontainer/*.json; do
            echo "// Release: ${{ github.event.release.tag_name }}" | cat - "$file" > temp && mv temp "$file"
          done
          for file in ${basepath}/.devcontainer/*.{yml,yaml} ${basepath}/example/*.rc; do
            echo "# Release: ${{ github.event.release.tag_name }}" | cat - "$file" > temp && mv temp "$file"
          done
          # Replace {{TAG}} in Markdown and docker-compose.yml
          find ${basepath} -type f -name "*.md" -exec sed -i "s/{{TAG}}/${{ github.event.release.tag_name }}/g" {} \;
          sed -i "s|image: noctuidus/devcontainer-latex:{{TAG}}|image: noctuidus/devcontainer-latex:${{ github.event.release.tag_name }}|" ${basepath}/.devcontainer/docker-compose.yml

          # Create top-level README.md
          awk '/<!-- BEGIN EXAMPLE -->/{p=1}/<!-- END EXAMPLE -->/{p=0}p' README.md > ${basepath}/Example.md
          echo "# LaTeX Devcontainer (${{ github.event.release.tag_name }})" > ${basepath}/README-devcontainer.md
          echo "" >> ${basepath}/README-devcontainer.md
          echo "This is the example LaTeX devcontainer release, using a prebuilt image with demo files." >> ${basepath}/README-devcontainer.md
          echo "" >> ${basepath}/README-devcontainer.md
          cat ${basepath}/Usage.md >> ${basepath}/README-devcontainer.md
          echo "" >> ${basepath}/README-devcontainer.md
          cat ${basepath}/Example.md >> ${basepath}/README-devcontainer.md


          # # Generate example/README.md from template
          # # cp example/README.tpl.md ${basepath}/example/README.md
          # echo "# LaTeX Devcontainer (${{ github.event.release.tag_name }})" > ${basepath}/Preamble.md
          # echo "" >> ${basepath}/Preamble.md
          # echo "This is the example LaTeX devcontainer release, using a prebuilt image with demo files." >> ${basepath}/Preamble.md

          # awk 'NR==FNR {p=p $0 "\n"; next} {sub(/{{ Preamble }}/, p)}1' ${basepath}/Preamble.md ${basepath}/example/README.md > temp && mv temp ${basepath}/example/README.md


          # awk 'NR==FNR {p=p $0 "\n"; next} {sub(/{{ EXAMPLE }}/, p)}1' ${basepath}/Example.md ${basepath}/example/README.md > temp && mv temp ${basepath}/example/README.md



          rm ${basepath}/Preamble.md ${basepath}/Usage.md ${basepath}/Config.md ${basepath}/Debug.md ${basepath}/Example.md

          zip -r latex-devcontainer-example.zip ${basepath}
        shell: bash

      # Upload core release zip
      - name: Upload core release zip
        run: |
          gh release upload ${{ github.event.release.tag_name }} latex-devcontainer-core.zip --clobber
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: bash

      # Upload source release zip
      - name: Upload source release zip
        run: |
          gh release upload ${{ github.event.release.tag_name }} latex-devcontainer-source.zip --clobber
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: bash

      # Upload example release zip
      - name: Upload example release zip
        run: |
          gh release upload ${{ github.event.release.tag_name }} latex-devcontainer-example.zip --clobber
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: bash